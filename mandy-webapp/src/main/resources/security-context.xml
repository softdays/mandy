<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:s="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/security 
        http://www.springframework.org/schema/security/spring-security-4.1.xsd">

	<!-- URLs accessibles sans authentification -->
	<s:http pattern="/api/application.wadl" security="none" />

	<s:http use-expressions="true">
		<s:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
		<s:intercept-url pattern="/**" access="isAuthenticated()" />
		
		<!-- Manage 302 to 401 if no session on Ajax request -->
        <s:custom-filter before="FORM_LOGIN_FILTER" ref="anonymousAjaxRequestFilter" />
        
		<s:form-login />

		<!-- Retour sur la page de login après déconnexion -->
		<s:logout delete-cookies="JSESSIONID" logout-success-url="/login" />

		<!-- Permet de fixer le problème de mise en cache de la page de logout 
			si celle-ci avait déjà été chargé par le browser -->
		<!-- See: http://spring.io/blog/2013/08/23/spring-security-3-2-0-rc1-highlights-security-headers/#cache-control -->
		<s:headers />
		
		<!-- Since Spring Sec 4.x, CSRF is enabled by default, this causes HTTP 403 on PUT request -->
		<s:csrf disabled="true"/>
	</s:http>

	<s:authentication-manager>
		<s:authentication-provider ref="ldapAuthProvider" />
	</s:authentication-manager>
	
	<bean id="anonymousAjaxRequestFilter" class="org.softdays.mandy.web.security.MyAnonymousAjaxRequestFilter"/>

	<bean id="ldapAuthProvider"
		class="org.springframework.security.ldap.authentication.LdapAuthenticationProvider">
		<constructor-arg>
			<bean
				class="org.springframework.security.ldap.authentication.BindAuthenticator">
				<constructor-arg ref="contextSource" />
				<property name="userSearch">
					<bean id="userSearch"
						class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
						<constructor-arg index="0" value="${ldap.search.base}" />
						<constructor-arg index="1" value="(uid={0})" />
						<constructor-arg index="2" ref="contextSource" />
					</bean>
				</property>
			</bean>
		</constructor-arg>
		<constructor-arg ref="authoritiesPopulator" />
		<property name="userDetailsContextMapper" ref="myUserDetailsContextMapper" />
	</bean>

	<!-- This bean points at the embedded directory server created by the ldap-server 
		element above -->
	<bean id="contextSource"
		class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
		<constructor-arg value="ldap://localhost:33389/dc=springframework,dc=org" />
	</bean>

	<bean id="authoritiesPopulator"
		class="org.springframework.security.ldap.authentication.NullLdapAuthoritiesPopulator" />

	<bean id="roleVoter"
		class="org.springframework.security.access.vote.RoleHierarchyVoter">
		<constructor-arg ref="roleHierarchy" />
	</bean>

	<bean id="roleHierarchy"
		class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<property name="hierarchy">
			<value>
				ROLE_ADMIN > ROLE_MANAGER
				ROLE_MANAGER > ROLE_USER
			</value>
		</property>
	</bean>

	<!-- LDAP server configuration -->
	<beans profile="dev">
		<s:ldap-server ldif="classpath:users.ldif" port="33389"
			root="dc=springframework,dc=org" />
	</beans>

	<beans profile="prod">
		<s:ldap-server url="${ldap.server.url}" />
	</beans>


</beans>
